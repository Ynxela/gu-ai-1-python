"""*Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
Каждый кортеж хранит информацию об отдельном товаре.
В кортеже должно быть два элемента — номер товара и словарь с параметрами
(характеристиками товара: название, цена, количество, единица измерения).
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

Пример готовой структуры:
[
    (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
    (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
    (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]

Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
например название, а значение — список значений-характеристик, например список названий товаров.

Пример:
{
    “название”: [“компьютер”, “принтер”, “сканер”],
    “цена”: [20000, 6000, 2000],
    “количество”: [5, 2, 7],
    “ед”: [“шт.”]
}
"""

from pprint import pprint

goods = []
goods_num = 1
user_choice = None

mapping = {
    'цена': 'цену',
    'ед': 'единицу измерения'
}

choices = {
    'n': 'Новый товар',
    'q': 'Выход'
}

int_values = ('цена', 'количество')

while user_choice != 'q':
    if not user_choice:
        print('Что вы хотите сделать? Введите букву.')
    for choice, verbose in choices.items():
        print(f'{choice}: {verbose}')
    user_choice = input()
    if user_choice in choices and user_choice == 'n':
        new_good = {'название': None, 'цена': None, 'количество': None, 'ед': None}
        for param in new_good:
            value = input(f'Введите {mapping.get(param, param)}: ')
            new_good[param] = int(value) if param in int_values else value
        goods.append((goods_num, new_good))
        goods_num += 1
        for good in goods:
            print(good)
    else:
        print('Вы ввели не верное значение, попробуйте еще раз. Введите букву.')

result = {'название': [], 'цена': [], 'количество': [], 'ед': []}

for num, good in goods:
    for param, value in good.items():
        result[param].append(value)

result['ед'] = list(set(result['ед']))

pprint(result)
